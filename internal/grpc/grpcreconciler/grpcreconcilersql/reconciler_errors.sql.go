// Code generated by sqlc. DO NOT EDIT.
// source: reconciler_errors.sql

package grpcreconcilersql

import (
	"context"

	"github.com/google/uuid"
	"github.com/nais/api/internal/slug"
)

const clearErrorsForTeam = `-- name: ClearErrorsForTeam :exec
DELETE FROM reconciler_errors
WHERE
	team_slug = $1
	AND reconciler = $2
`

type ClearErrorsForTeamParams struct {
	TeamSlug   slug.Slug
	Reconciler string
}

func (q *Queries) ClearErrorsForTeam(ctx context.Context, arg ClearErrorsForTeamParams) error {
	_, err := q.db.Exec(ctx, clearErrorsForTeam, arg.TeamSlug, arg.Reconciler)
	return err
}

const setErrorForTeam = `-- name: SetErrorForTeam :exec
INSERT INTO
	reconciler_errors (
		correlation_id,
		team_slug,
		reconciler,
		error_message
	)
VALUES
	(
		$1,
		$2,
		$3,
		$4
	)
ON CONFLICT (team_slug, reconciler) DO UPDATE
SET
	correlation_id = EXCLUDED.correlation_id,
	created_at = NOW(),
	error_message = EXCLUDED.error_message
`

type SetErrorForTeamParams struct {
	CorrelationID uuid.UUID
	TeamSlug      slug.Slug
	Reconciler    string
	ErrorMessage  string
}

func (q *Queries) SetErrorForTeam(ctx context.Context, arg SetErrorForTeamParams) error {
	_, err := q.db.Exec(ctx, setErrorForTeam,
		arg.CorrelationID,
		arg.TeamSlug,
		arg.Reconciler,
		arg.ErrorMessage,
	)
	return err
}
