// Code generated by sqlc. DO NOT EDIT.

package serviceaccountsql

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	Count(ctx context.Context) (int64, error)
	Create(ctx context.Context, arg CreateParams) (*ServiceAccount, error)
	CreateToken(ctx context.Context, arg CreateTokenParams) (*ServiceAccountToken, error)
	Delete(ctx context.Context, id uuid.UUID) error
	DeleteToken(ctx context.Context, id uuid.UUID) error
	GetByIDs(ctx context.Context, ids []uuid.UUID) ([]*ServiceAccount, error)
	GetByName(ctx context.Context, name string) (*ServiceAccount, error)
	GetByToken(ctx context.Context, token string) (*ServiceAccount, error)
	GetTokensByIDs(ctx context.Context, ids []uuid.UUID) ([]*ServiceAccountToken, error)
	List(ctx context.Context, arg ListParams) ([]*ServiceAccount, error)
	RemoveApiKeysFromServiceAccount(ctx context.Context, serviceAccountID uuid.UUID) error
	// TODO: Remove once the static service accounts concept has been removed
	SetTokenSecret(ctx context.Context, arg SetTokenSecretParams) error
	Update(ctx context.Context, arg UpdateParams) (*ServiceAccount, error)
	UpdateToken(ctx context.Context, arg UpdateTokenParams) (*ServiceAccountToken, error)
}

var _ Querier = (*Queries)(nil)
