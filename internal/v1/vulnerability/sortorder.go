package vulnerability

import (
	"context"
	"strings"

	"github.com/nais/api/internal/v1/graphv1/sortfilter"
)

var SortFilterImageVulnerabilities = sortfilter.New[*ImageVulnerability, ImageVulnerabilityOrderField, *struct{}](ImageVulnerabilityOrderFieldIdentifier)

func init() {
	SortFilterImageVulnerabilities.RegisterOrderBy(ImageVulnerabilityOrderFieldIdentifier, func(ctx context.Context, a, b *ImageVulnerability) int {
		return strings.Compare(a.Identifier, b.Identifier)
	})
	SortFilterImageVulnerabilities.RegisterOrderBy(ImageVulnerabilityOrderFieldPackageURL, func(ctx context.Context, a, b *ImageVulnerability) int {
		return strings.Compare(a.Package, b.Package)
	})
	SortFilterImageVulnerabilities.RegisterOrderBy(ImageVulnerabilityOrderFieldState, func(ctx context.Context, a, b *ImageVulnerability) int {
		return strings.Compare(a.State.String(), b.State.String())
	})
	SortFilterImageVulnerabilities.RegisterOrderBy(ImageVulnerabilityOrderFieldSeverity, func(ctx context.Context, a, b *ImageVulnerability) int {
		severityToScore := map[ImageVulnerabilitySeverity]int{
			ImageVulnerabilitySeverityCritical:   5,
			ImageVulnerabilitySeverityHigh:       4,
			ImageVulnerabilitySeverityMedium:     3,
			ImageVulnerabilitySeverityLow:        2,
			ImageVulnerabilitySeverityUnassigned: 1,
		}

		return severityToScore[a.Severity] - severityToScore[b.Severity]
	})
}
