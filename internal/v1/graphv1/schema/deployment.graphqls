extend type Team {
	"Deployment key for the team."
	deploymentKey: DeploymentKey

	"""
	List of deployments for the team.
	DO NOT USE
	This is a work in progress, and will be changed in the future.
	"""
	deployments(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentConnection!
}

extend interface Workload {
	"""
	Deployment information for the job.
	DO NOT USE
	This is a work in progress, and will be changed in the future.
	"""
	deploymentInfo: DeploymentInfo!
}

extend type Application {
	"""
	Deployment information for the application.
	DO NOT USE
	This is a work in progress, and will be changed in the future.
	"""
	deploymentInfo: DeploymentInfo!
}

extend type Job {
	"""
	Deployment information for the job.
	DO NOT USE
	This is a work in progress, and will be changed in the future.
	"""
	deploymentInfo: DeploymentInfo!
}

extend type Mutation {
	"Update the deploy key of a team. Returns the updated deploy key."
	changeDeploymentKey(input: ChangeDeploymentKeyInput!): ChangeDeploymentKeyPayload!
}

input ChangeDeploymentKeyInput {
	"The name of the team to update the deploy key for."
	teamSlug: Slug!
}

type ChangeDeploymentKeyPayload {
	"The updated deploy key."
	deploymentKey: DeploymentKey
}

"Deployment key type."
type DeploymentKey implements Node {
	"The unique identifier of the deployment key."
	id: ID!

	"The actual key."
	key: String!

	"The date the deployment key was created."
	created: Time!

	"The date the deployment key expires."
	expires: Time!
}

type DeploymentConnection {
	"Pagination information."
	pageInfo: PageInfo!

	"List of nodes."
	nodes: [Deployment!]!

	"List of edges."
	edges: [DeploymentEdge!]!
}

type DeploymentEdge {
	"Cursor for this edge that can be used for pagination."
	cursor: Cursor!

	"The deployment."
	node: Deployment!
}

"""
Description of a deployment.
DO NOT USE
This type is a work in progress, and will be changed in the future.
"""
type Deployment implements Node {
	id: ID!
	team: Team!
	resources: [DeploymentResource!]!
	environment: TeamEnvironment!
	statuses: [DeploymentStatus!]!
	created: Time!
	repository: String!
}

"""
DO NOT USE
This type is a work in progress, and will be changed in the future.
"""
type DeploymentResource {
	group: String!
	kind: String!
	name: String!
	version: String!
	namespace: String!
}

"""
DO NOT USE
This type is a work in progress, and will be changed in the future.
"""
type DeploymentStatus {
	status: String!
	message: String
	created: Time!
}

"""
Deployment information for a workload.
DO NOT USE
This is a work in progress, and will be changed in the future.
"""
type DeploymentInfo {
	deployer: String
	timestamp: Time
	commitSha: String
	url: String
	history(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentConnection!
}

extend enum ApplicationOrderField {
	"Order applications by the deployment time."
	DEPLOYMENT_TIME
}
