extend interface Workload {
	"Status of the workload"
	status: WorkloadStatus!
}

extend type Application {
	"Status of the application"
	status: WorkloadStatus!
}

extend type Job {
	"Status of the job"
	status: WorkloadStatus!
}

type WorkloadStatus {
	"State of the workload"
	state: WorkloadState!
	"Errors related to the workload"
	errors: [WorkloadStatusError!]!
}

"Error describing usage of a deprecated registry"
type WorkloadStatusDeprecatedRegistry implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Image registry"
	registry: String!
	"Image repository"
	repository: String!
	"Image name"
	name: String!
	"Image tag"
	tag: String!
}

"Error describing usage of a deprecated ingress"
type WorkloadStatusDeprecatedIngress implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Deprecated ingress"
	ingress: String!
}

"A workload does not have any active instances, but is requested to have some"
type WorkloadStatusNoRunningInstances implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
}

"Error describing that a workload has new instances that are failing"
type WorkloadStatusNewInstancesFailing implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Names of the failing instances"
	failingInstances: [String!]!
}

"The last deployed YAML is invalid"
type WorkloadStatusInvalidNaisYaml implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Error message"
	detail: String!
}

"Error describing that the workload is failing to synchronize"
type WorkloadStatusSynchronizationFailing implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Error message"
	detail: String!
}

"An inbound network policies are not met"
type WorkloadStatusInboundNetwork implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Network policy"
	policy: NetworkPolicyRule!
}

"An outbound network policies are not met"
type WorkloadStatusOutboundNetwork implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Network policy"
	policy: NetworkPolicyRule!
}

"Error describing that the workload is failing to run"
type WorkloadStatusFailedRun implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Error message"
	detail: String!
	"Name of the run"
	name: String!
}

"An error for a workload"
interface WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
}

"Workload status error level"
enum WorkloadStatusErrorLevel {
	"TODO are errors that should be fixed when possible"
	TODO
	"WARNING are errors that should be fixed, but are not critical"
	WARNING
	"ERROR are errors that must be fixed"
	ERROR
}

"State of the workload"
enum WorkloadState {
	"Everything is nais"
	NAIS
	"Something is not nais"
	NOT_NAIS
	"Something is failing"
	FAILING
	"Unknown state"
	UNKNOWN
}
