extend type Team {
	"NAIS applications owned by the team."
	applications(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor

		"Ordering options for items returned from the connection."
		orderBy: ApplicationOrder
	): ApplicationConnection!
}

type Application implements Node & Workload {
	"The globally unique ID of the application."
	id: ID!

	"The name of the application."
	name: String!

	"The team that owns the application."
	team: Team!

	"The environment the application is deployed in."
	environment: TeamEnvironment!

	"The container image of the application."
	image: ContainerImage!

	# deployInfo: DeployInfo!
	# accessPolicy: AccessPolicy!
	# status: WorkloadStatus!
	# authz: [Authz!]!
	# variables: [Variable!]!
	# persistence: [Persistence!]!
	# resources: Resources!
	# type: WorkloadType!
	#
	# imageDetails: ImageDetails!
	# ingresses: [String!]!
	# instances: [Instance!]!
	# autoScaling: AutoScaling!
	# manifest: String!
	# secrets: [Secret!]!
}

type ApplicationConnection {
	"Pagination information."
	pageInfo: PageInfo!

	"List of nodes."
	nodes: [Application!]!

	"List of edges."
	edges: [ApplicationEdge!]!
}

type ApplicationEdge {
	"Cursor for this edge that can be used for pagination."
	cursor: Cursor!

	"The application."
	node: Application!
}

"Ordering options when fetching applications."
input ApplicationOrder {
	"The field to order items by."
	field: ApplicationOrderField!

	"The direction to order items by."
	direction: OrderDirection!
}

enum ApplicationOrderField {
	"Order applications by name."
	NAME

	"Order applications by status."
	STATUS

	"Order applications by the name of the environment."
	ENVIRONMENT

	"Order applications by the risk score."
	RISK_SCORE

	"Order applications by the deployment time."
	DEPLOYMENT_TIME
}
