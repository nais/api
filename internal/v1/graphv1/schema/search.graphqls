extend type Query {
	search(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor

		filter: SearchFilter!
	): SearchNodeConnection!
}

union SearchNode = Team

input SearchFilter {
	query: String!
	type: SearchType
}

type SearchNodeConnection {
	"Pagination information."
	pageInfo: PageInfo!

	"List of nodes."
	nodes: [SearchNode!]!

	"List of edges."
	edges: [SearchNodeEdge!]!
}

type SearchNodeEdge {
	"Cursor for this edge that can be used for pagination."
	cursor: Cursor!

	"The SearchNode."
	node: SearchNode!
}

enum SearchType {
	TEAM
}
