extend interface Workload {
	"The cost for a workload."
	cost: WorkloadCost!
}

extend type Application {
	"The cost for the application."
	cost: WorkloadCost!
}

extend type Job {
	"The cost for the job."
	cost: WorkloadCost!
}

type WorkloadCost {
	"Get the cost for a workload within a time period."
	daily(
		"Start date of the period, inclusive."
		from: Date!

		"End date of the period, inclusive."
		to: Date!
	): WorkloadCostPeriod!

	"The cost for the last 12 months."
	monthly: WorkloadCostPeriod!
}

type WorkloadCostPeriod {
	"The total cost for the period."
	sum: Float!

	"The cost series."
	series: [WorkloadCostSeries!]!
}

type WorkloadCostSeries {
	"The date for the cost. When calculating the cost for a monthly period, the date will be the last day of the month that has cost data."
	date: Date!

	"The sum of the cost across all services."
	sum: Float!

	"The cost for the services used by the workload."
	services: [WorkloadCostService!]!
}

type WorkloadCostService {
	"The name of the service."
	service: String!

	"The cost in euros."
	cost: Float!
}
