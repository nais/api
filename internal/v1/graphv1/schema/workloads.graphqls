interface Workload implements Node {
	"The globally unique ID of the workload."
	id: ID!

	"The name of the workload."
	name: String!

	"The team that owns the workload."
	team: Team!

	"The environment the workload is deployed in."
	environment: TeamEnvironment!

	"The container image of the workload."
	image: ContainerImage!

	"The resources allocated to the workload."
	resources: WorkloadResources!

	# deployInfo: DeployInfo!
	# status: WorkloadStatus!
	# authz: [Authz!]!
}

type ContainerImage implements Node {
	"The globally unique ID of the container image node."
	id: ID!

	"Name of the container image."
	name: String!

	"Tag of the container image."
	tag: String!
}

interface WorkloadResources {
	"Instances using resources above this threshold will be killed."
	limits: WorkloadResourceQuantity!

	"Resources requested by the workload."
	requests: WorkloadResourceQuantity!
}

type WorkloadResourceQuantity {
	"The number of CPU cores."
	cpu: Float!

	"The amount of memory in bytes."
	memory: Int!
}
