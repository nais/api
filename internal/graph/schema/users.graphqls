extend type Query {
	"""
	Get a list of users.
	"""
	users(
		"""
		Get the first n items in the connection. This can be used in combination with the after parameter.
		"""
		first: Int

		"""
		Get items after this cursor.
		"""
		after: Cursor

		"""
		Get the last n items in the connection. This can be used in combination with the before parameter.
		"""
		last: Int

		"""
		Get items before this cursor.
		"""
		before: Cursor

		"""
		Ordering options for items returned from the connection.
		"""
		orderBy: UserOrder
	): UserConnection!

	"""
	Get a user by its ID.
	"""
	user(
		"""
		The ID of the user to get.
		"""
		id: ID!
	): User!

	"""
	The currently authenticated user.
	"""
	me: AuthenticatedUser!
}

"""
The user type represents a user of the NAIS platform and the NAIS GraphQL API.
"""
type User implements Node {
	"""
	The globally unique ID of the user.
	"""
	id: ID!

	"""
	The email address of the user.
	"""
	email: String!

	"""
	The full name of the user.
	"""
	name: String!

	"""
	The external ID of the user. This value is managed by the NAIS API user synchronization.
	"""
	externalID: String!

	"""
	List of teams the user is connected to.
	"""
	teams(
		"""
		Get the first n items in the connection. This can be used in combination with the after parameter.
		"""
		first: Int

		"""
		Get items after this cursor.
		"""
		after: Cursor

		"""
		Get the last n items in the connection. This can be used in combination with the before parameter.
		"""
		last: Int

		"""
		Get items before this cursor.
		"""
		before: Cursor

		"""
		Ordering options for items returned from the connection.
		"""
		orderBy: UserTeamOrder
	): TeamMemberConnection!

	"""
	True if the user is global admin.
	"""
	isAdmin: Boolean!
}

"""
User connection.
"""
type UserConnection {
	"""
	Pagination information.
	"""
	pageInfo: PageInfo!

	"""
	List of nodes.
	"""
	nodes: [User!]!

	"""
	List of edges.
	"""
	edges: [UserEdge!]!
}

"""
User edge.
"""
type UserEdge {
	"""
	Cursor for this edge that can be used for pagination.
	"""
	cursor: Cursor!

	"""
	The user.
	"""
	node: User!
}

"""
Ordering options when fetching users.
"""
input UserOrder {
	"""
	The field to order items by.
	"""
	field: UserOrderField!

	"""
	The direction to order items by.
	"""
	direction: OrderDirection!
}

"""
Ordering options when fetching the teams a user is connected to.
"""
input UserTeamOrder {
	"""
	The field to order items by.
	"""
	field: UserTeamOrderField!

	"""
	The direction to order items by.
	"""
	direction: OrderDirection!
}

"""
Possible fields to order users by.
"""
enum UserOrderField {
	"""
	The name of the user.
	"""
	NAME

	"""
	The email address of the user.
	"""
	EMAIL
}

"""
Possible fields to order user teams by.
"""
enum UserTeamOrderField {
	"""
	The unique slug of the team.
	"""
	TEAM_SLUG
}

"""
Authenticated user type.
"""
union AuthenticatedUser = User | ServiceAccount
