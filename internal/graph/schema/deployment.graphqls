extend type Team {
	"""
	Deployment key for the team.
	"""
	deploymentKey: DeploymentKey

	"""
	List deployments for a team.
	"""
	deployments(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentConnection!
}

extend interface Workload {
	"""
	Deployment information for the job.
	DO NOT USE
	This is a work in progress, and will be changed in the future.
	"""
	deploymentInfo: DeploymentInfo!

	"""
	List of deployments for the workload.
	"""
	deployments(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentConnection!
}

extend type Application {
	"""
	Deployment information for the application.
	DO NOT USE
	This is a work in progress, and will be changed in the future.
	"""
	deploymentInfo: DeploymentInfo!

	"""
	List of deployments for the application.
	"""
	deployments(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentConnection!
}

extend type Job {
	"""
	Deployment information for the job.
	DO NOT USE
	This is a work in progress, and will be changed in the future.
	"""
	deploymentInfo: DeploymentInfo!

	"""
	List of deployments for the job.
	"""
	deployments(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentConnection!
}

extend type Mutation {
	"Update the deploy key of a team. Returns the updated deploy key."
	changeDeploymentKey(input: ChangeDeploymentKeyInput!): ChangeDeploymentKeyPayload!
}

input ChangeDeploymentKeyInput {
	"The name of the team to update the deploy key for."
	teamSlug: Slug!
}

type ChangeDeploymentKeyPayload {
	"The updated deploy key."
	deploymentKey: DeploymentKey
}

"Deployment key type."
type DeploymentKey implements Node {
	"The unique identifier of the deployment key."
	id: ID!

	"The actual key."
	key: String!

	"The date the deployment key was created."
	created: Time!

	"The date the deployment key expires."
	expires: Time!
}

type DeploymentConnection {
	"""
	Pagination information.
	"""
	pageInfo: PageInfo!

	"""
	List of nodes.
	"""
	nodes: [Deployment!]!

	"""
	List of edges.
	"""
	edges: [DeploymentEdge!]!
}

type DeploymentStatusConnection {
	"""
	Pagination information.
	"""
	pageInfo: PageInfo!

	"""
	List of nodes.
	"""
	nodes: [DeploymentStatus!]!

	"""
	List of edges.
	"""
	edges: [DeploymentStatusEdge!]!
}

type DeploymentResourceConnection {
	"""
	Pagination information.
	"""
	pageInfo: PageInfo!

	"""
	List of nodes.
	"""
	nodes: [DeploymentResource!]!

	"""
	List of edges.
	"""
	edges: [DeploymentResourceEdge!]!
}

type DeploymentEdge {
	"""
	Cursor for this edge that can be used for pagination.
	"""
	cursor: Cursor!

	"""
	The deployment.
	"""
	node: Deployment!
}

type DeploymentStatusEdge {
	"""
	Cursor for this edge that can be used for pagination.
	"""
	cursor: Cursor!

	"""
	The deployment status.
	"""
	node: DeploymentStatus!
}

type DeploymentResourceEdge {
	"""
	Cursor for this edge that can be used for pagination.
	"""
	cursor: Cursor!

	"""
	The deployment resource.
	"""
	node: DeploymentResource!
}

"""
Description of a deployment.
"""
type Deployment implements Node {
	"""
	ID of the deployment.
	"""
	id: ID!

	"""
	Creation timestamp of the deployment.
	"""
	createdAt: Time!

	"""
	Team that the deployment belongs to.
	"""
	team: Team!

	"""
	Environment that the deployment belongs to.
	"""
	environment: TeamEnvironment!

	"""
	The repository that triggered the deployment.
	"""
	repository: String

	"""
	Resources that were deployed.
	"""
	resources(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentResourceConnection!

	"""
	Statuses of the deployment.
	"""
	statuses(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentStatusConnection!
}

"""
Resource connected to a deployment.
"""
type DeploymentResource implements Node {
	"""
	Globally unique ID of the deployment resource.
	"""
	id: ID!

	"""
	Deployment resource kind.
	"""
	kind: String!

	"""
	The name of the resource.
	"""
	name: String!
}

"""
Resource connected to a deployment.
"""
type DeploymentStatus implements Node {
	"""
	Globally unique ID of the deployment resource.
	"""
	id: ID!

	"""
	Creation timestamp of the deployment status.
	"""
	createdAt: Time!

	"""
	State of the deployment.
	"""
	state: DeploymentStatusState!

	"""
	Message describing the deployment status.
	"""
	message: String!
}

"""
Possible states of a deployment status.
"""
enum DeploymentStatusState {
	SUCCESS
	ERROR
	FAILURE
	INACTIVE
	IN_PROGRESS
	QUEUED
	PENDING
}

"""
Deployment information for a workload.
DO NOT USE
This is a work in progress, and will be changed in the future.
"""
type DeploymentInfo {
	deployer: String
	timestamp: Time
	commitSha: String
	url: String
	history(
		"Get the first n items in the connection. This can be used in combination with the after parameter."
		first: Int

		"Get items after this cursor."
		after: Cursor

		"Get the last n items in the connection. This can be used in combination with the before parameter."
		last: Int

		"Get items before this cursor."
		before: Cursor
	): DeploymentConnection!
}

extend enum ApplicationOrderField {
	"Order applications by the deployment time."
	DEPLOYMENT_TIME
}

extend enum JobOrderField {
	"Order applications by the deployment time."
	DEPLOYMENT_TIME
}

extend enum ActivityLogEntryResourceType {
	"All activity log entries related to deploy keys will use this resource type."
	DEPLOY_KEY
}

type TeamDeployKeyUpdatedActivityLogEntry implements ActivityLogEntry & Node {
	"ID of the entry."
	id: ID!

	"The identity of the actor who performed the action. The value is either the name of a service account, or the email address of a user."
	actor: String!

	"Creation time of the entry."
	createdAt: Time!

	"Message that summarizes the entry."
	message: String!

	"Type of the resource that was affected by the action."
	resourceType: ActivityLogEntryResourceType!

	"Name of the resource that was affected by the action."
	resourceName: String!

	"The team slug that the entry belongs to."
	teamSlug: Slug!

	"The environment name that the entry belongs to."
	environmentName: String
}
