extend interface Workload {
	"Status of the workload"
	status: WorkloadStatus!
}

extend type Application {
	"Status of the application"
	status: WorkloadStatus!
}

extend type Job {
	"Status of the job"
	status: WorkloadStatus!
}

type WorkloadStatus {
	"State of the workload"
	state: WorkloadState!
	"Errors related to the workload"
	errors: [WorkloadStatusError!]!
}

"Error describing usage of a deprecated registry"
type WorkloadStatusDeprecatedRegistry implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Image registry"
	registry: String!
	"Image repository"
	repository: String!
	"Image name"
	name: String!
	"Image tag"
	tag: String!
}

"Error describing usage of an instance of Cloud SQL with a unsupported version"
type WorkloadStatusUnsupportedCloudSQLVersion implements WorkloadStatusError {
	"Error level. Warning if the version is deprecated, error if the version is unsupported."
	level: WorkloadStatusErrorLevel!
	"Postgres version"
	version: String!
}

"Error describing usage of a deprecated ingress"
type WorkloadStatusDeprecatedIngress implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Deprecated ingress"
	ingress: String!
}

"A workload does not have any active instances, but is requested to have some"
type WorkloadStatusNoRunningInstances implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
}

"The last deployed YAML is invalid"
type WorkloadStatusInvalidNaisYaml implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Error message"
	detail: String!
}

"Error describing that the workload is failing to synchronize"
type WorkloadStatusSynchronizationFailing implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Error message"
	detail: String!
}

"Error describing that the workload is failing to run"
type WorkloadStatusFailedRun implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Error message"
	detail: String!
	"Name of the run"
	name: String!
}

"Error describing that the workload is missing SBOM"
type WorkloadStatusMissingSBOM implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
}

"Error describing that the workload is missing SBOM"
type WorkloadStatusVulnerable implements WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
	"Vulnerabilities"
	summary: ImageVulnerabilitySummary!
}

"An error for a workload"
interface WorkloadStatusError {
	"Error level"
	level: WorkloadStatusErrorLevel!
}

"Workload status error level"
enum WorkloadStatusErrorLevel {
	"TODO are errors that should be fixed when possible"
	TODO
	"WARNING are errors that should be fixed, but are not critical"
	WARNING
	"ERROR are errors that must be fixed"
	ERROR
}

"State of the workload"
enum WorkloadState {
	"Everything is nais"
	NAIS
	"Something is not nais"
	NOT_NAIS
	"Something is failing"
	FAILING
	"Unknown state"
	UNKNOWN
}

extend enum ApplicationOrderField {
	"Order applications by status."
	STATUS
}

extend enum JobOrderField {
	"Order jobs by status."
	STATUS
}

extend input TeamWorkloadsFilter {
	"""
	Filter workloads with given workload states.
	"""
	states: [WorkloadState!]
}
