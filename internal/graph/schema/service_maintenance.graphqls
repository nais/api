type RunMaintenancePayload {
	error: String
}

input RunMaintenanceInput {
	project: String!
	serviceName: String!
}

extend type Mutation {
	RunMaintenance(input: RunMaintenanceInput!): RunMaintenancePayload
}

extend type ValkeyInstance {
	"Fetch maintenances for the Valkey instance."
	maintenance: ServiceMaintenance!
	project: String!
}

type ServiceMaintenance {
	updates: [ServiceMaintenanceUpdate]!
}

type ServiceMaintenanceUpdate {
	"Deadline for installing the maintenance. If set, maintenance is mandatory and will be forcibly applied."
	deadline: Time

	"Title of the maintenance."
	title: String!

	"Description of the maintenance."
	description: String!

	"Documentation link."
	documentation_link: String

	"The time when the update will be automatically applied. If set, maintenance is mandatory and will be forcibly applied."
	start_at: Time
}
