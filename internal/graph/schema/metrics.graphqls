extend type Query {
	"""
	Query Prometheus metrics directly using PromQL.
	This allows for flexible metric queries across environments.
	Supports both instant queries and range queries.
	"""
	metrics(input: MetricsQueryInput!): MetricsQueryResult!
}

"""
Input for querying Prometheus metrics.
"""
input MetricsQueryInput {
	"""
	The PromQL query to execute.
	Example: "rate(http_requests_total[5m])"
	"""
	query: String!

	"""
	The environment name to query metrics from.
	"""
	environmentName: String!

	"""
	Optional timestamp for instant queries.
	Specifies the exact point in time to evaluate the query.
	If not provided, defaults to current time minus 5 minutes.
	This parameter is ignored when range is provided.
	"""
	time: Time

	"""
	Optional range query parameters.
	If provided, executes a range query instead of an instant query.
	"""
	range: MetricsRangeInput
}

"""
Input for Prometheus range queries.
"""
input MetricsRangeInput {
	"""
	Start timestamp for the range query.
	"""
	start: Time!

	"""
	End timestamp for the range query.
	"""
	end: Time!

	"""
	Query resolution step width in seconds.
	Example: 60 for 1-minute intervals
	"""
	step: Int!
}

"""
Result from a Prometheus metrics query.
"""
type MetricsQueryResult {
	"""
	Time series data from the query.
	For instant queries, each series contains a single value.
	For range queries, each series contains multiple values over time.
	"""
	series: [MetricSeries!]!

	"""
	Warnings returned by Prometheus, if any.
	"""
	warnings: [String!]
}

"""
A time series with its labels and data points.
"""
type MetricSeries {
	"""
	The metric labels as key-value pairs.
	"""
	labels: [MetricLabel!]!

	"""
	The data points for this time series.
	Instant queries will have a single value.
	Range queries will have multiple values over time.
	"""
	values: [MetricValue!]!
}

"""
A key-value pair representing a Prometheus label.
"""
type MetricLabel {
	"""
	The label name.
	"""
	name: String!

	"""
	The label value.
	"""
	value: String!
}

"""
A single data point in a time series.
"""
type MetricValue {
	"""
	The timestamp of the data point.
	"""
	timestamp: Time!

	"""
	The value at the given timestamp.
	"""
	value: Float!
}
