extend type Query {
	"""
	Search for entities.
	"""
	search(
		"""
		Get the first n items in the connection. This can be used in combination with the after parameter.
		"""
		first: Int

		"""
		Get items after this cursor.
		"""
		after: Cursor

		"""
		Get the last n items in the connection. This can be used in combination with the before parameter.
		"""
		last: Int

		"""
		Get items before this cursor.
		"""
		before: Cursor

		"""
		Filter the search results.
		"""
		filter: SearchFilter!
	): SearchNodeConnection!
}

"""
Types that can be searched for.
"""
union SearchNode = Team

"""
Search filter for filtering search results.
"""
input SearchFilter {
	"""
	The query string.
	"""
	query: String!

	"""
	The type of entities to search for. If not specified, all types will be searched.
	"""
	type: SearchType
}

"""
Search node connection.
"""
type SearchNodeConnection {
	"""
	Pagination information.
	"""
	pageInfo: PageInfo!

	"""
	List of nodes.
	"""
	nodes: [SearchNode!]!

	"""
	List of edges.
	"""
	edges: [SearchNodeEdge!]!
}

"""
Search node edge.
"""
type SearchNodeEdge {
	"""
	Cursor for this edge that can be used for pagination.
	"""
	cursor: Cursor!

	"""
	The SearchNode.
	"""
	node: SearchNode!
}

"""
A list of possible search types.
"""
enum SearchType {
	"""
	Search for teams.
	"""
	TEAM
}
