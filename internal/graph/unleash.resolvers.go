package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"errors"

	"github.com/nais/api/internal/graph/apierror"
	"github.com/nais/api/internal/graph/model"
	"github.com/nais/api/internal/k8s"
	"github.com/nais/api/internal/slug"
)

// CreateUnleashForTeam is the resolver for the createUnleashForTeam field.
func (r *mutationResolver) CreateUnleashForTeam(ctx context.Context, team slug.Slug) (*model.Unleash, error) {
	//actor := authz.ActorFromContext(ctx)
	//err := authz.RequireTeamMembership(actor, team)
	//if err != nil {
	//	return nil, err
	//}

	ret, err := r.unleashMgr.CreateUnleash(ctx, team)
	if errors.Is(err, k8s.ErrSecretUnmanaged) {
		return nil, apierror.ErrSecretUnmanaged
	}
	return ret, err
}
