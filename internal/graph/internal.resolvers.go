package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/nais/api/internal/graph/gengql"
	"github.com/nais/api/internal/graph/model"
)

// TeamsInternal is the resolver for the teamsInternal field.
func (r *queryResolver) TeamsInternal(ctx context.Context) (*model.TeamsInternal, error) {
	return &model.TeamsInternal{}, nil
}

// Name is the resolver for the name field.
func (r *roleResolver) Name(ctx context.Context, obj *model.Role) (string, error) {
	return obj.RoleName, nil
}

// Roles is the resolver for the roles field.
func (r *teamsInternalResolver) Roles(ctx context.Context, obj *model.TeamsInternal) ([]string, error) {
	return sqlc.AllRoleNameValues(), nil
}

// Role returns gengql.RoleResolver implementation.
func (r *Resolver) Role() gengql.RoleResolver { return &roleResolver{r} }

// TeamsInternal returns gengql.TeamsInternalResolver implementation.
func (r *Resolver) TeamsInternal() gengql.TeamsInternalResolver { return &teamsInternalResolver{r} }

type roleResolver struct{ *Resolver }
type teamsInternalResolver struct{ *Resolver }
