type Image {
  id: ID!
  projectId: String!
  name: String!
  version: String!
  digest: String!
  rekorId: String!
  summary: VulnerabilitySummary!
  findings(
    "Returns the first n entries from the list."
    offset: Int

    "Limit the number of entries returned."
    limit: Int

    "Order findings by"
    orderBy: OrderBy
  ): FindingList!
  workloadReferences: [WorkloadReference!]!
}

type WorkloadReference {
  id: ID!
  name: String!
  team: String!
  workloadType: String!
  environment: String!
  deployInfo: DeployInfo!
}

type ImageList {
  nodes: [Image!]!
  pageInfo: PageInfo!
}

type Finding {
  id: ID!
  componentId: String!
  cveId: String!
  ghsaId: String!
  osvId: String!
  severity: String!
  description: String!
  packageUrl: String!
  vulnerabilityId: String!
}

extend enum OrderByField {
  "Order by severity."
  SEVERITY
  "Order by packageUrl"
  PACKAGE_URL
}

type FindingList {
  nodes: [Finding!]!
  pageInfo: PageInfo!
}

extend type Query {
  "Get image by dependency track project id."
  dependencyTrackProject(projectId: String!): Image!
}
