extend type Mutation {
  deleteJob(
    "The name of the naisjob."
    name: String!

    "The name of the team who owns the naisjob."
    team: Slug!

    "The environment the naisjob is deployed to."
    env: String!
  ): DeleteJobResult!
}
type DeleteJobResult {
  "Whether the job was deleted or not."
  deleted: Boolean!
  error: String
}
extend type Query {
  "Get a naisjob by name, team and env."
  naisjob(
    "The name of the naisjob."
    name: String!

    "The name of the team who owns the naisjob."
    team: Slug!

    "The environment the naisjob is deployed in."
    env: String!
  ): NaisJob!
}

type Run {
  id: ID!
  name: String!
  podNames: [String!]!
  startTime: Time
  completionTime: Time
  duration: String!
  image: String!
  message: String!
  failed: Boolean!
}

type FailedRunError implements StateError {
  revision: String!
  level: ErrorLevel!
  runMessage: String!
  runName: String!
}

type NaisJob implements Workload {
  id: ID!
  name: String!
  image: String!
  deployInfo: DeployInfo!
  env: Env!
  accessPolicy: AccessPolicy!
  status: WorkloadStatus!
  authz: [Authz!]!
  variables: [Variable!]!
  resources: Resources!
  type: WorkloadType!

  imageDetails: ImageDetails!
  runs: [Run!]!
  manifest: String!
  schedule: String!
  team: Team!
  persistence: [Persistence!]!
  completions: Int!
  parallelism: Int!
  retries: Int!
  secrets: [Secret!]!
}

type NaisJobList {
  nodes: [NaisJob!]!
  pageInfo: PageInfo!
}
