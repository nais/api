extend type Query {
  "Get a collection of teams. Default limit is 20"
  teams(
    "Offset to start listing teams from. Default is 0."
    offset: Int

    "Limit the number of teams to return. Default is 20."
    limit: Int
  ): TeamList! @auth

  "Get a specific team."
  team("Slug of the team." slug: Slug!): Team! @auth
}

"Paginated teams type."
type TeamList {
  "The list of teams."
  nodes: [Team!]!

  "Pagination information."
  pageInfo: PageInfo!
}

"Team type."
type Team {
  id: ID!

  "Unique slug of the team."
  slug: Slug!

  "Purpose of the team."
  purpose: String!

  "The ID of the Azure AD group for the team. This value is managed by the Azure AD reconciler."
  azureGroupID: ID

  "The slug of the GitHub team. This value is managed by the GitHub reconciler."
  gitHubTeamSlug: String

  "The email address of the Google group for the team. This value is managed by the Google Workspace reconciler."
  googleGroupEmail: String

  "The Google artifact registry for the team."
  googleArtifactRegistry: String

  "The CDN bucket for the team."
  cdnBucket: String

  "Timestamp of the last successful synchronization of the team."
  lastSuccessfulSync: Time

  "Slack channel for the team."
  slackChannel: String!

  "Whether or not the team is currently being deleted."
  deletionInProgress: Boolean!

  "The environments available for the team."
  environments: [Env!]!
}

"Slack alerts channel type."
type SlackAlertsChannel {
  "The environment for the alerts sent to the channel."
  environment: String!

  "The name of the Slack channel."
  channelName: String!
}

"GCP project type."
type GcpProject {
  "The environment for the project."
  environment: String!

  "The display name of the project."
  projectName: String!

  "The GCP project ID."
  projectId: String!
}

"NAIS namespace type."
type NaisNamespace {
  "The environment for the namespace."
  environment: String!

  "The namespace."
  namespace: Slug!
}
