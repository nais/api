// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package donotuse

import (
	"time"

	"github.com/nais/api/internal/graphv1/pagination"
	"github.com/nais/api/internal/graphv1/scalar"
	"github.com/nais/api/internal/slug"
	"github.com/nais/api/internal/users"
)

// The query root for the NAIS GraphQL API.
type Query struct {
}

// Team type.
type Team struct {
	ID string `json:"id"`
	// Unique slug of the team.
	Slug slug.Slug `json:"slug"`
	// Purpose of the team.
	Purpose string `json:"purpose"`
	// The ID of the Azure AD group for the team. This value is managed by the Azure AD reconciler.
	AzureGroupID *string `json:"azureGroupID,omitempty"`
	// The slug of the GitHub team. This value is managed by the GitHub reconciler.
	GitHubTeamSlug *string `json:"gitHubTeamSlug,omitempty"`
	// The email address of the Google group for the team. This value is managed by the Google Workspace reconciler.
	GoogleGroupEmail *string `json:"googleGroupEmail,omitempty"`
	// The Google artifact registry for the team.
	GoogleArtifactRegistry *string `json:"googleArtifactRegistry,omitempty"`
	// The CDN bucket for the team.
	CdnBucket *string `json:"cdnBucket,omitempty"`
	// Timestamp of the last successful synchronization of the team.
	LastSuccessfulSync *time.Time `json:"lastSuccessfulSync,omitempty"`
	// Slack channel for the team.
	SlackChannel string `json:"slackChannel"`
	// Whether or not the team is currently being deleted.
	DeletionInProgress bool `json:"deletionInProgress"`
	// Whether or not the viewer is an owner of the team.
	ViewerIsOwner bool `json:"viewerIsOwner"`
	// Whether or not the viewer is a member of the team.
	ViewerIsMember bool `json:"viewerIsMember"`
}

// Paginated teams type.
type TeamConnection struct {
	// The list of teams.
	Edges []*TeamEdge `json:"edges"`
	// Pagination information.
	PageInfo pagination.PageInfo `json:"pageInfo"`
}

// Team deletion key type.
type TeamDeleteKey struct {
	// The unique key used to confirm the deletion of a team.
	Key string `json:"key"`
	// The creation timestamp of the key.
	CreatedAt time.Time `json:"createdAt"`
	// Expiration timestamp of the key.
	Expires time.Time `json:"expires"`
	// The user who created the key.
	CreatedBy users.User `json:"createdBy"`
	// The team the delete key is for.
	Team Team `json:"team"`
}

type TeamEdge struct {
	// The team.
	Node Team `json:"node"`
	// The cursor for use in pagination.
	Cursor scalar.Cursor `json:"cursor"`
}
