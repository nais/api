extend type Query {
  "Get a collection of teams. Default limit is 20"
  teams(
    "The number of items to return. Default is 20."
    first: Int = 20
    "The cursor to start at."
    after: Cursor
    "The number of items to return."
    last: Int
    "The cursor to start at."
    before: Cursor
  ): TeamConnection!

  "Get a specific team."
  team("Slug of the team." slug: Slug!): Team!

  "Get a team delete key."
  teamDeleteKey("The key to get." key: String!): TeamDeleteKey!
}

"Team deletion key type."
type TeamDeleteKey {
  "The unique key used to confirm the deletion of a team."
  key: String!

  "The creation timestamp of the key."
  createdAt: Time!

  "Expiration timestamp of the key."
  expires: Time!

  "The user who created the key."
  createdBy: User!

  "The team the delete key is for."
  team: Team!
}

"Paginated teams type."
type TeamConnection {
  "The list of teams."
  edges: [TeamEdge!]!

  "Pagination information."
  pageInfo: PageInfo!
}

type TeamEdge {
  "The team."
  node: Team!

  "The cursor for use in pagination."
  cursor: Cursor!
}

"Team type."
type Team {
  id: ID!

  "Unique slug of the team."
  slug: Slug!

  "Purpose of the team."
  purpose: String!

  "The ID of the Azure AD group for the team. This value is managed by the Azure AD reconciler."
  azureGroupID: ID

  "The slug of the GitHub team. This value is managed by the GitHub reconciler."
  gitHubTeamSlug: String

  "The email address of the Google group for the team. This value is managed by the Google Workspace reconciler."
  googleGroupEmail: String

  "The Google artifact registry for the team."
  googleArtifactRegistry: String

  "The CDN bucket for the team."
  cdnBucket: String

  "Timestamp of the last successful synchronization of the team."
  lastSuccessfulSync: Time

  "Slack channel for the team."
  slackChannel: String!

  "Whether or not the team is currently being deleted."
  deletionInProgress: Boolean!

  "Whether or not the viewer is an owner of the team."
  viewerIsOwner: Boolean!

  "Whether or not the viewer is a member of the team."
  viewerIsMember: Boolean!
}
