// Code generated by sqlc. DO NOT EDIT.
// source: user.sql

package searchsql

import (
	"context"

	"github.com/google/uuid"
	"github.com/nais/api/internal/slug"
)

const teamSlugsFromUserID = `-- name: TeamSlugsFromUserID :many
SELECT
	teams.slug
FROM
	user_roles
	JOIN teams ON teams.slug = user_roles.target_team_slug
WHERE
	user_roles.user_id = $1
ORDER BY
	teams.slug ASC
`

func (q *Queries) TeamSlugsFromUserID(ctx context.Context, userID uuid.UUID) ([]slug.Slug, error) {
	rows, err := q.db.Query(ctx, teamSlugsFromUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []slug.Slug{}
	for rows.Next() {
		var slug slug.Slug
		if err := rows.Scan(&slug); err != nil {
			return nil, err
		}
		items = append(items, slug)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
