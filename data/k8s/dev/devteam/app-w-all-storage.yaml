apiVersion: nais.io/v1alpha1
kind: Application
metadata:
  name: app-w-all-storage
  namespace: dev
  labels:
    team: devteam

spec:
  idporten:
    enabled: true
  maskinporten:
    enabled: true
  tokenx:
    enabled: true
  azure:
    application:
      enabled: true
  accessPolicy:
    inbound:
      rules:
        - application: bot-rap
          namespace: bot
          permissions:
            roles:
              - rap-read
        - application: dataproduct-apps-topics
        - application: nais-deploy-canary
          namespace: nais
    outbound:
      rules:
        - application: some-app
          namespace: bot
          permissions:
            roles:
              - some-role
        - application: dataproduct-apps-topics
      external:
        - host: vg.no
        - host: foo.bar.com
          ports:
            - port: 9200
        - ipv4: 127.12.13.14
        - ipv4: 10.11.12.13
          ports:
            - port: 443
            - port: 444
  image: ghcr.io/navikt/app-w-all-storage:latest
  ingresses:
    - "https://storageapp.example.com"
    - "https://storageapp.eksternius.example.com"
    - "https://storageapp.ansatt.dev.nav.no"
  gcp:
    sqlInstances:
      - type: POSTGRES_15
        cascadingDelete: true
        name: contests
      - type: POSTGRES_14
        name: donotdelete
    bigQueryDatasets:
      - name: deleteme_bq
        permission: READWRITE
        cascadingDelete: true
      - name: donotdelete_bq
        permission: READWRITE
      - name: contests
        permission: READWRITE
    buckets:
      - name: deleteme_bucket
        cascadingDelete: true
      - name: donotdelete_bucket
      - name: uniquebucketname-bucket
  kafka:
    pool: nav-dev
  redis:
    - instance: contests
      access: admin
  openSearch:
    instance: opensearch-1
    access: readwrite
  filesFrom:
    - persistentVolumeClaim: asdf
  resources:
    limits:
      cpu: 250m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-w-all-storage-0
  labels:
    app: app-w-all-storage
spec:
  ingressClassName: nais-ingress
  rules:
    - host: storageapp.example.com
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: app-w-all-storage
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: app-w-all-storage
  name: app-w-all-storage-1
spec:
  ingressClassName: nais-ingress-external
  rules:
  - host: storageapp.eksternius.example.com
    http:
      paths:
      - backend:
          service:
            name: app-w-all-storage
            port:
              number: 80
        path: /
        pathType: Prefix
status:
  loadBalancer:
    ingress:
    - ip: 192.169.69.69
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: app-w-all-storage
  name: app-w-all-storage-2
spec:
  ingressClassName: nais-ingress-fa
  rules:
  - host: storageapp.ansatt.dev.nav.no
    http:
      paths:
      - backend:
          service:
            name: app-w-all-storage
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
status:
  loadBalancer:
    ingress:
    - ip: 192.169.69.70
