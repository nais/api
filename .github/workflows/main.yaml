name: Build and push image and chart
on:
  push:
    branches:
      - main
env:
  NAME: nais-api
  IMAGE_REPOSITORY: oci://europe-north1-docker.pkg.dev/nais-io/nais
jobs:
  build_push:
    outputs:
      version: ${{ steps.build-push-sign.outputs.version }}
    permissions:
      contents: read
      id-token: write
    name: Build and push
    runs-on: ubuntu-latest-16-cores
    steps:
      - uses: actions/checkout@v4
      - run: docker compose up bigquery -d
      - uses: asdf-vm/actions/setup@v3
      - id: asdf-cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf/
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
      - uses: asdf-vm/actions/install@v3
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        with:
          before_install: |
            asdf install golang latest
            asdf global golang latest
      - name: Find go cache dir
        id: go-cache
        run: |
          go version
          # Clear cache dirs to avoid error when restoring
          go clean -cache -modcache
          echo "gocache=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "gomodcache=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
      - name: Cache go modules
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.go-cache.outputs.gocache }}
            ${{ steps.go-cache.outputs.gomodcache }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - run: make test
      - run: helm lint --strict ./charts
      - run: make staticcheck
      - run: make vulncheck
      - name: Check code format and run code generators
        run: |
          make fmt
          make generate
          git diff --exit-code --name-only
      - id: go_version
        run: echo "go_version=$(asdf current golang | awk '{print $2}')" >> $GITHUB_OUTPUT
      - uses: nais/platform-build-push-sign@main
        id: build-push-sign
        with:
          name: nais-api
          build_args: |
            GO_VERSION=${{ steps.go_version.outputs.go_version }}-
          google_service_account: gh-api
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          push: true
      - name: Build Chart
        run: |-
          sed -i "s/^version: .*/version: ${{ steps.build-push-sign.outputs.version }}/g" charts/Chart.yaml
          cat charts/Chart.yaml
          helm package charts
      - name: Push Chart
        run: |-
          helm push ${{ env.NAME }}*.tgz ${{ env.IMAGE_REPOSITORY }}

  rollout:
    needs:
      - build_push
    runs-on: fasit-deploy
    permissions:
      id-token: write
    steps:
      - uses: nais/fasit-deploy@v2
        with:
          chart: ${{ env.IMAGE_REPOSITORY }}/${{ env.NAME }}
          version: ${{ needs.build_push.outputs.version }}
